cmake_minimum_required (VERSION 2.8.11)
project (nchdf4)

INCLUDE(CheckIncludeFiles)
INCLUDE(CheckTypeSize)

CHECK_INCLUDE_FILES(dlfcn.h HAVE_DLFCN_H)
CHECK_INCLUDE_FILES(inttypes.h HAVE_INTTYPES_H)
CHECK_INCLUDE_FILES(malloc.h HAVE_MALLOC_H)
CHECK_INCLUDE_FILES(memory.h HAVE_MEMORY_H)
CHECK_INCLUDE_FILES(stdarg.h HAVE_STDARG_H)
CHECK_INCLUDE_FILES(stdbool.h HAVE_STDBOOL_H)
CHECK_INCLUDE_FILES(stddef.h HAVE_STDDEF_H)
CHECK_INCLUDE_FILES(stdint.h HAVE_STDINT_H)
CHECK_INCLUDE_FILES(stdlib.h HAVE_STDLIB_H)
CHECK_INCLUDE_FILES(strings.h HAVE_STRINGS_H)
CHECK_INCLUDE_FILES(string.h HAVE_STRING_H)
CHECK_INCLUDE_FILES(sys_STAT.h HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILES(sys_TYPES.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILES(unistd.h HAVE_UNISTD_H)

CHECK_FUNCTION_EXISTS(access HAVE_ACCESS)
CHECK_FUNCTION_EXISTS(doprnt HAVE_DOPRNT)
CHECK_FUNCTION_EXISTS(getpid HAVE_GETPID)
CHECK_FUNCTION_EXISTS(long_LONG_INT HAVE_LONG_LONG_INT)
CHECK_FUNCTION_EXISTS(memmove HAVE_MEMMOVE)
CHECK_FUNCTION_EXISTS(memset HAVE_MEMSET)
CHECK_FUNCTION_EXISTS(mkstemp HAVE_MKSTEMP)
CHECK_FUNCTION_EXISTS(strcasecmp HAVE_STRCASECMP)
CHECK_FUNCTION_EXISTS(strchr HAVE_STRCHR)
CHECK_FUNCTION_EXISTS(strdup HAVE_STRDUP)
CHECK_FUNCTION_EXISTS(strerror HAVE_STRERROR)
CHECK_FUNCTION_EXISTS(strncpy HAVE_STRNCPY)
CHECK_FUNCTION_EXISTS(strndup HAVE_STRNDUP)
CHECK_FUNCTION_EXISTS(strrchr HAVE_STRRCHR)
CHECK_FUNCTION_EXISTS(strtol HAVE_STRTOL)
CHECK_FUNCTION_EXISTS(unlink HAVE_UNLINK)
CHECK_FUNCTION_EXISTS(vprintf HAVE_vprintf)

CHECK_TYPE_SIZE("ptrdiff_t" SIZE_PTRDIFF_T)
CHECK_TYPE_SIZE("ssize_t" SIZE_SSIZE_T)
CHECK_TYPE_SIZE("uchar" SIZE_UCHAR)
CHECK_TYPE_SIZE("unsigned long long int" SIZE_UNSIGNED_LONG_LONG_INT)
CHECK_TYPE_SIZE("_bool" SIZE__BOOL)
IF(SIZEOF_PTRDIFF_T) SET(HAVE_PTRDIFF_T TRUE) ENDIF(SIZEOF_PTRDIFF_T)
IF(SIZEOF_SSIZE_T) SET(HAVE_SSIZE_T TRUE) ENDIF(SIZEOF_SSIZE_T)
IF(SIZEOF_UCHAR) SET(HAVE_UCHAR TRUE) ENDIF(SIZEOF_UCHAR)
IF(SIZEOF__BOOL) SET(HAVE__BOOL TRUE) ENDIF(SIZEOF__BOOL)

# Check for ZLib
FIND_PACKAGE(ZLIB)
IF(NOT ZLIB_LIBRARY)
    MESSAGE(FATAL_ERROR "HDF5 Support specified, cannot find ZLib.")
ENDIF()
INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIRS})

# Create h4config.h file.
configure_file("${nchdf4_SOURCE_DIR}/h4config.h.in"
  "${nchdf4_BINARY_DIR}/h4config.h")
ADD_DEFINITIONS(-DHAVE_CONFIG_H)

add_subdirectory(hdf)
add_subdirectory(mfhdf)
add_subdirectory(man)

